// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VehicleRegistrationAPI.Data;

#nullable disable

namespace VehicleRegistrationAPI.Migrations
{
    [DbContext(typeof(VehicleRegistrationDbContext))]
    [Migration("20250611095444_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VehicleRegistrationAPI.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("PersonalIdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.HasIndex("PersonalIdentificationNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_Customers_PersonalIdentificationNumber");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad14152a-55b9-43f1-ac68-e87ecaef702a"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.johnson@example.com",
                            Name = "Alice Johnson",
                            PersonalIdentificationNumber = "PIN1001",
                            PhoneNumber = "1234567890",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("445bdbe0-b8b0-4efb-9540-e5b38ff07a86"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "bob.smith@example.com",
                            Name = "Bob Smith",
                            PersonalIdentificationNumber = "PIN1002",
                            PhoneNumber = "2345678901",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("763ff2cd-55b9-4c0f-ac6c-ff94bc7abdd0"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "charlie.brown@example.com",
                            Name = "Charlie Brown",
                            PersonalIdentificationNumber = "PIN1003",
                            PhoneNumber = "3456789012",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1efd72fa-e9ef-4415-b669-445dc43c4f8c"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "diana.prince@example.com",
                            Name = "Diana Prince",
                            PersonalIdentificationNumber = "PIN1004",
                            PhoneNumber = "4567890123",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b85483e5-25d2-479a-9d0b-8e80a57484de"),
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ethan.hunt@example.com",
                            Name = "Ethan Hunt",
                            PersonalIdentificationNumber = "PIN1005",
                            PhoneNumber = "5678901234",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("VehicleRegistrationAPI.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<int>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("RegistrationNumber")
                        .IsUnique()
                        .HasDatabaseName("IX_Vehicles_RegistrationNumber");

                    b.ToTable("Vehicles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f28d7ed3-e0e6-42d7-8381-f5acf7fc10ef"),
                            Color = "White",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Make = "Toyota",
                            Model = "Camry",
                            Name = "Toyota Camry",
                            OwnerId = new Guid("ad14152a-55b9-43f1-ac68-e87ecaef702a"),
                            RegistrationDate = new DateTime(2020, 5, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            RegistrationNumber = "ABC1234",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2020
                        },
                        new
                        {
                            Id = new Guid("f0f23bde-c9e3-4cc3-b999-7681a15c66f1"),
                            Color = "Black",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Make = "Honda",
                            Model = "Accord",
                            Name = "Honda Accord",
                            OwnerId = new Guid("445bdbe0-b8b0-4efb-9540-e5b38ff07a86"),
                            RegistrationDate = new DateTime(2019, 3, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            RegistrationNumber = "XYZ5678",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2019
                        },
                        new
                        {
                            Id = new Guid("5fa8cca5-9612-4cd4-9c7d-a85afdd1c37f"),
                            Color = "Red",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Make = "Ford",
                            Model = "Mustang",
                            Name = "Ford Mustang",
                            OwnerId = new Guid("763ff2cd-55b9-4c0f-ac6c-ff94bc7abdd0"),
                            RegistrationDate = new DateTime(2021, 7, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            RegistrationNumber = "MUS2021",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Year = 2021
                        });
                });

            modelBuilder.Entity("VehicleRegistrationAPI.Entities.Vehicle", b =>
                {
                    b.HasOne("VehicleRegistrationAPI.Entities.Customer", "Owner")
                        .WithMany("Vehicles")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("VehicleRegistrationAPI.Entities.Customer", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
