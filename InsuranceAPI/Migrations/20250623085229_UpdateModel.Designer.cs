// <auto-generated />
using System;
using InsuranceAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InsuranceAPI.Migrations
{
    [DbContext(typeof(InsuranceDbContext))]
    [Migration("20250623085229_UpdateModel")]
    partial class UpdateModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InsuranceAPI.Features.FeatureManagement.Entities.FeatureToggle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("IsEnabled");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Name");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedAt")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("IX_FeatureToggles_Name");

                    b.ToTable("FeatureToggles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d1e2f3a4-b5c6-7d8e-9f0a-b1c2d3e4f5a6"),
                            CreatedAt = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Enable or disable the Car details on car insurance display",
                            IsEnabled = true,
                            Name = "ShowCarDetails",
                            UpdatedAt = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("e2f3a4b5-c6d7-8e9f-0a1b-2c3d4e5f6a7b"),
                            CreatedAt = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Enable or disable discounts on insurance products",
                            IsEnabled = false,
                            Name = "ApplyDiscounts",
                            UpdatedAt = new DateTime(2025, 6, 20, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("InsuranceAPI.Features.Insurance.Entities.Insurance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt")
                        .HasDefaultValueSql("NOW()");

                    b.Property<bool>("DiscountApplied")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("DiscountApplied");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("EndDate");

                    b.Property<Guid>("InsuranceProductId")
                        .HasColumnType("uuid");

                    b.Property<string>("InsuredItemIdentity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PersonalIdentificationNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("character varying(12)")
                        .HasColumnName("PersonalIdentificationNumber");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Price");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("StartDate");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedAt")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.HasIndex("InsuranceProductId");

                    b.ToTable("Insurances", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1e1b2c3-d4e5-4f6a-8b7c-9d0e1f2a3b4c"),
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiscountApplied = false,
                            EndDate = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            InsuranceProductId = new Guid("ca536771-42b8-4f55-8014-7e98c6c7b060"),
                            InsuredItemIdentity = "ABC1234",
                            PersonalIdentificationNumber = "PIN1001",
                            Price = 30m,
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("b2e2c3d4-e5f6-4a8b-7c9d-0e1f2a3b4c5d"),
                            CreatedAt = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiscountApplied = false,
                            EndDate = new DateTime(2025, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            InsuranceProductId = new Guid("def55e24-40c9-4234-825a-bbf4319fc79b"),
                            InsuredItemIdentity = "Bob Smith",
                            PersonalIdentificationNumber = "PIN1002",
                            Price = 20m,
                            StartDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("c3d4e5f6-a8b7-4c9d-0e1f-2a3b4c5d6e7f"),
                            CreatedAt = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DiscountApplied = false,
                            EndDate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            InsuranceProductId = new Guid("b43c53a0-1c57-4c9c-94a1-673d7db31fcf"),
                            InsuredItemIdentity = "Bruno the Dog",
                            PersonalIdentificationNumber = "PIN1003",
                            Price = 10m,
                            StartDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            UpdatedAt = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("InsuranceAPI.Features.Insurance.Entities.InsuranceProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("Id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)")
                        .HasColumnName("Code");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("CreatedAt")
                        .HasDefaultValueSql("NOW()");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("Discount");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("Price");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("UpdatedAt")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("IX_InsuranceProducts_Code");

                    b.HasIndex("Name")
                        .HasDatabaseName("IX_InsuranceProducts_Name");

                    b.ToTable("InsuranceProducts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b43c53a0-1c57-4c9c-94a1-673d7db31fcf"),
                            Code = "PET",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPercentage = 15m,
                            Name = "Pet insurance",
                            Price = 10m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("def55e24-40c9-4234-825a-bbf4319fc79b"),
                            Code = "HEALTH",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPercentage = 10m,
                            Name = "Personal health insurance",
                            Price = 20m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ca536771-42b8-4f55-8014-7e98c6c7b060"),
                            Code = "CAR",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPercentage = 5m,
                            Name = "Car insurance",
                            Price = 30m,
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("InsuranceAPI.Features.Insurance.Entities.Insurance", b =>
                {
                    b.HasOne("InsuranceAPI.Features.Insurance.Entities.InsuranceProduct", "InsuranceProduct")
                        .WithMany()
                        .HasForeignKey("InsuranceProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InsuranceProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
